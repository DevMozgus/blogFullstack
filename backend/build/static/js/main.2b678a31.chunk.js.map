{"version":3,"sources":["services/blog.js","components/BlogForm.js","components/Togglable.js","components/Blog.js","components/Blogs.js","services/login.js","components/Login.js","App.js","index.js"],"names":["token","getAll","a","axios","get","request","data","createBlog","newObject","config","headers","Authorization","post","updateBlog","id","put","deleteBlog","delete","setToken","newToken","BlogForm","blogs","setBlogs","setMessage","useState","title","setTitle","author","setAuthor","url","setUrl","handleNewBlog","event","preventDefault","newEntry","likes","blogService","addedBlog","concat","success","error","err","className","onSubmit","type","value","name","onChange","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideOnVisible","display","showOnVisible","toggleVisible","useImperativeHandle","style","onClick","label1","children","label2","displayName","Blog","blog","addLike","user","username","Blogs","border","borderRadius","margin","padding","find","newBlog","returnedBlog","index","findIndex","newBlogs","window","confirm","updatedBlogs","filter","sortedBlogs","sort","curr","next","map","key","login","credentials","response","Login","setUser","setUsername","password","setPassword","handleLogin","loginService","localStorage","setItem","JSON","stringify","Message","message","messageStyle","borderColor","setTimeout","App","useEffect","loginUserJSON","getItem","parse","usersBlogs","BlogFormRef","useRef","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b678a31.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseurl = '/api/blogs'\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const request = await axios.get(baseurl)\n  return request.data;\n}\n\nconst createBlog = async (newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const request = await axios.post(baseurl, newObject, config)\n  return request.data\n}\n\nconst updateBlog = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const request = await axios.put(`${baseurl}/${id}`, newObject, config)\n  return request.data\n}\n\nconst deleteBlog = async (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const request = await axios.delete(`${baseurl}/${id}`, config)\n  return request.data\n}\n\nexport default { getAll, createBlog, updateBlog, deleteBlog, setToken }","import React, { useState } from 'react'\nimport blogService from '../services/blog'\n\nconst BlogForm = ({ blogs, setBlogs, setMessage }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleNewBlog = async (event) => {\n    event.preventDefault()\n    const newEntry = {\n      title: title,\n      author: author,\n      url: url,\n      likes: 0,\n    }\n    try {\n      const addedBlog = await blogService.createBlog(newEntry)\n      setBlogs(blogs.concat(addedBlog))\n      const success = {\n        success: \"Successfuly added blog!\"\n      }\n      setMessage(success)\n    } catch (err) {\n      const error = {\n        error: \"Blog entry failed\",\n        err: err\n      }\n      setMessage(error)\n    }\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n\n\n  return (\n    <>\n      <div className=\"formDiv\" >\n        <h3>New Blog Entry</h3>\n        {<form onSubmit={handleNewBlog}>\n          <div>\n            Author\n        <input\n              type=\"text\"\n              value={author}\n              name=\"Author\"\n              onChange={({ target }) => setAuthor(target.value)}\n            />\n          </div>\n          <div>\n            Title\n        <input\n              type=\"text\"\n              value={title}\n              name=\"Title\"\n              onChange={({ target }) => setTitle(target.value)}\n            />\n          </div>\n          <div>\n            Url\n        <input\n              type=\"text\"\n              value={url}\n              name=\"Url\"\n              onChange={({ target }) => setUrl(target.value)}\n            />\n          </div>\n          <button type=\"submit\">Submit</button>\n        </form>}\n      </div>\n    </>\n  )\n}\n\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideOnVisible = { display: visible ? 'none' : '' }\n  const showOnVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisible = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(\n    ref,\n    () => {\n      return {\n        toggleVisible\n      }\n    }\n  )\n\n  return (\n    <div >\n      <div style={hideOnVisible} >\n        <button onClick={toggleVisible}>{props.label1}</button>\n      </div>\n      <div style={showOnVisible} className=\"togglableContent\" >\n        {props.children}\n        <button onClick={toggleVisible}>{props.label2}</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  label1: PropTypes.string.isRequired,\n  label2: PropTypes.string.isRequired,\n}\n\nexport default Togglable","import React from 'react'\nimport Togglable from './Togglable'\n\nconst Blog = ({ blog, addLike, deleteBlog, user }) => {\n  return (\n    <>\n      <h4>{blog.title}</h4>\n      <Togglable label1={\"show blog\"} label2={\"hide blog\"}>\n        <p>Author: {blog.author}</p>\n        <p>Link: {blog.url}</p>\n        {user ?\n          <>\n            <p>Likes: {blog.likes}</p>\n            <button onClick={() => addLike(blog.id)}>like</button>\n          </>\n          : null\n        }\n        {\n          user && (user.username === blog.user.username || blog.user) ?\n            <button onClick={() => deleteBlog(blog.id, blog.title)}>delete</button>\n            : null\n        }\n      </Togglable>\n    </>\n  )\n}\n\nexport default Blog","import React from 'react'\nimport blogService from '../services/blog'\nimport Blog from './Blog'\n\nconst Blogs = ({ blogs, setBlogs, user, setMessage }) => {\n  const style = {\n    border: \"3px solid\",\n    borderRadius: \"3px\",\n    margin: \"1vh\",\n    padding: \"1vh\"\n  }\n\n  const addLike = async (id) => {\n    const blog = blogs.find(blog => blog.id === id)\n    const newBlog = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: (blog.likes + 1),\n    }\n    try {\n      const returnedBlog = await blogService.updateBlog(id, newBlog)\n      const index = blogs.findIndex(blog => blog.id === id)\n      //const newBlogs = await blogService.getAll()\n      returnedBlog.user = {\n        id: returnedBlog.user,\n        username: user.username,\n        name: user.name\n      }\n      const newBlogs = [...blogs]\n      newBlogs[index] = returnedBlog\n      setBlogs(newBlogs)\n    } catch (err) {\n      const error = {\n        error: 'Failed to update blog',\n        err: err\n      }\n      setMessage(error)\n    }\n  }\n\n  const deleteBlog = async (id, title) => {\n    if (window.confirm(`Remove blog '${title}'?`)) {\n      try {\n        await blogService.deleteBlog(id)\n        const updatedBlogs = blogs.filter(blog => blog.id !== id)\n        setBlogs(updatedBlogs)\n      } catch (err) {\n        const error = {\n          error: 'Failed to delete blog',\n          err: err\n        }\n        setMessage(error)\n      }\n    }\n  }\n\n  const sortedBlogs = blogs.sort((curr, next) => next.likes - curr.likes)\n  return (\n    <>\n      {sortedBlogs.map(blog => {\n        return (\n          <div className='blogs' style={style} key={blog.id}>\n            <Blog blog={blog}\n              addLike={addLike}\n              deleteBlog={deleteBlog}\n              user={user} />\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\n\nexport default Blogs","import axios from \"axios\";\nconst baseurl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseurl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState } from 'react'\nimport loginService from '../services/login'\nimport blogService from '../services/blog'\n\nconst Login = ({ setUser, setMessage }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      blogService.setToken(user.token)\n\n      window.localStorage.setItem(\n        'loginUser', JSON.stringify(user)\n      )\n\n      const success = {\n        success: 'Successful Login'\n      }\n      setMessage(success)\n    } catch (err) {\n      const error = {\n        error: 'Login Failed',\n        err: err\n      }\n      setMessage(error)\n    }\n  }\n\n  return (\n    <>\n      {<form onSubmit={handleLogin}>\n        <div>\n          Username\n      <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n      <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>}\n    </>\n  )\n}\n\nexport default Login","import React, { useState, useEffect, useRef } from 'react'\nimport blogService from './services/blog'\nimport BlogForm from './components/BlogForm'\nimport Blogs from './components/Blogs'\nimport Login from './components/Login'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    const loginUserJSON = window.localStorage.getItem('loginUser')\n    if (loginUserJSON) {\n      const user = JSON.parse(loginUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n    const usersBlogs = async () => {\n      try {\n        const blogs = await blogService.getAll()\n        setBlogs([...blogs])\n      } catch (err) {\n        const error = {\n          error: 'Failed to get blogs',\n          err: err\n        }\n        setMessage(error)\n      }\n    }\n    usersBlogs()\n  }, [])\n\n  const handleSignout = () => {\n    window.localStorage.clear()\n    setUser(null)\n  }\n\n  const BlogFormRef = useRef()\n\n  return (\n    <>\n      <h2>Blogs</h2>\n      {message ?\n        <Message message={message} setMessage={setMessage} />\n        : null\n      }\n      {\n        user\n          ?\n          <>\n            <p>logged in as <b>{user.username}</b></p>\n            <button onClick={() => handleSignout()}>Sign Out</button>\n            <Togglable\n              label1={'Create Blog'}\n              label2={'cancel'}\n              ref={BlogFormRef}>\n              <BlogForm\n                setBlogs={setBlogs}\n                blogs={blogs}\n                setMessage={setMessage} />\n            </Togglable>\n          </>\n          :\n          <Togglable\n            label1={'login'}\n            label2={'cancel'}>\n            <Login\n              setUser={setUser}\n              setMessage={setMessage} />\n          </Togglable>\n      }\n      <Blogs blogs={blogs}\n        setBlogs={setBlogs}\n        user={user}\n        setMessage={setMessage}\n      />\n    </>\n  )\n}\n\n\nconst Message = ({ message, setMessage }) => {\n\n  const messageStyle = {\n    border: \"2px solid\",\n    borderColor: message.error ? \"red\" : \"green\",\n    borderRadius: \"4px\",\n    padding: \"1vw\"\n  }\n  //console.log(message.err)\n  setTimeout(() => {\n    setMessage(null)\n  }, 4000)\n\n  return (\n    <>\n      <div>\n        <p style={messageStyle} >{message.error ? message.error : message.success}</p>\n      </div>\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}